Logger.info "=========== Writing <%= @ticket_count %> tickets for #{listing.id} ==========="
order = SeedHelpers.create_order(
  %{
    user_id: user.id, 
    credit_card_id: card.id,
    slug: Random.generate_slug(),
    status: "completed", 
    subtotal: 5000,
    credit_card_fee: 500,
    processing_fee: 500,
    total_price: 6000,
    completed_at: NaiveDateTime.utc_now()
  }
)

Enum.each(1..<%= @ticket_count %>, fn(x) ->
  ticket = case TicketAgent.Random.sample([true, true, false, true, false, true, true]) do
    true ->
      name = FakerElixir.Name.name()
      %TicketAgent.Ticket{
        listing_id: listing.id,
        slug: Random.generate_slug(),
        name: "Ticket for <%= String.replace(@title, "\"", "'") %>",
        status: TicketAgent.Random.sample(["purchased", "emailed"]),
        guest_name: FakerElixir.Name.name(),
        guest_email: FakerElixir.Internet.email(:popular, name),
        order_id: order.id,
        description: "Ticket for <%= String.replace(@title, "\"", "'") %>",
        price: <%= round(@price) * 100 %>,
        sale_start:  NaiveDateTime.from_iso8601!("<%= @created_at %>")
      }   
    false -> 
      %TicketAgent.Ticket{
        listing_id: listing.id,
        slug: Random.generate_slug(),
        name: "Ticket for <%= String.replace(@title, "\"", "'") %>",
        status: "available",
        description: "Ticket for <%= String.replace(@title, "\"", "'") %>",
        price: <%= round(@price) * 100 %>,
        sale_start:  NaiveDateTime.from_iso8601!("<%= @created_at %>")
      }
  end
  TicketAgent.Repo.insert!(ticket)
  Logger.info "=========== Inserted ticket ##{x} for #{listing.id} ==========="
end)
Logger.info "=========== Inserted 80 tickets for #{listing.id} ==========="
